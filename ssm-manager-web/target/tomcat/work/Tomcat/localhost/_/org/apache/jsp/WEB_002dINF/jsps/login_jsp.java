/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-01-07 14:04:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.util.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/common.jspf", Long.valueOf(1514964230001L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("\thref=\"/jquery-easyui-1.3.5/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/jquery-easyui-1.3.5/themes/icon.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"/jquery-easyui-1.3.5/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/jquery-easyui-1.3.5/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/jquery-easyui-1.3.5/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<title>Login page</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"loginDiv\">\r\n");
      out.write("\t\t<form id=\"ff\" method=\"post\" action=\"/user/login.action\">\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<label for=\"userName\">账号:</label>\r\n");
      out.write("\t\t\t\t<!-- 采用 js验证 -->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userName\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<label for=\"userPass\">密码:</label>\r\n");
      out.write("\t\t\t\t<!-- 行内验证\r\n");
      out.write("\t\t\t\t<input class=\"easyui-validatebox\" type=\"text\" name=\"name\"\r\n");
      out.write("\t\t\t\t\tdata-options=\"required:true,missingMessage:'请填写密码！'\" />\r\n");
      out.write("\t\t\t\t\t -->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"userPass\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<div style=\"color:red\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t *＄｛选择器｝把dom对象转为jquery对象，一般再处理成easyUI对象\r\n");
      out.write("\t\t *例如　把$(\"name='userName'\")validatebox({})转为easyUI对象\r\n");
      out.write("\t\t *easyUI对象就可以使用相关的语法进行处理，如：$('selector').plugin('method', parameter); \r\n");
      out.write("\t\t */\r\n");
      out.write("\t\t//这里的大括号相关于写json格式的数据：{属性：值，属性：值}\r\n");
      out.write("\t\t$(\"[name='userName']\").validatebox({\r\n");
      out.write("\t\t\trequired : true,\r\n");
      out.write("\t\t\tmissingMessage : '请填写账号！'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t$(\"[name='userPass']\").validatebox({\r\n");
      out.write("\t\t\trequired : true,\r\n");
      out.write("\t\t\tmissingMessage : '请填写密码！'\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t//禁用验证\r\n");
      out.write("\t\t$(\"#ff\").form(\"disableValidation\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//把div的内容作为对话框方式弹出\r\n");
      out.write("\t\t$('#loginDiv').dialog({\r\n");
      out.write("\t\t\ttitle : '登陆入口',\r\n");
      out.write("\t\t\twidth : 250,\r\n");
      out.write("\t\t\theight : 150,\r\n");
      out.write("\t\t\tclosed : false,\r\n");
      out.write("\t\t\tcache : false,\r\n");
      out.write("\t\t\t//设置关闭按钮可见\r\n");
      out.write("\t\t\tclosable : false,\r\n");
      out.write("\t\t\t//模式化窗口.如果为true将锁屏\r\n");
      out.write("\t\t\tmodal : true,\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ttext:'登陆',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\talert(\"可以登陆了\");\r\n");
      out.write("\t\t\t\t\t//启用验证\r\n");
      out.write("\t\t\t\t\t$(\"#ff\").form(\"enableValidation\");\r\n");
      out.write("\t\t\t\t\t//进行验证，通过就提交\r\n");
      out.write("\t\t\t\t\tif($(\"#ff\").form(\"validate\")){\r\n");
      out.write("\t\t\t\t\t//提交\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#ff\").submit();\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ttext:'取消',\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
